generator gen {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = "postgres-connection"
}

model company {
  id                       BigInt    @id @default(autoincrement())
  code                     String
  company_name             String?
  tin_ein_number           String?
  date_of_incorporation    DateTime? @db.Timestamptz(6)
  country_of_incorporation String?
  company_website          String?
  company_email            String?
  logo_url                 String?
  phone_number             String?
  address                  Json?
  description              String?
  tenant                   String?
  additional_attributes    Json?
  is_active                Boolean?  @default(true)
  is_archived              Boolean?  @default(false)
  created_by               String?
  updated_by               String?
  created_at               DateTime? @default(now()) @db.Timestamptz(6)
  updated_at               DateTime? @default(now()) @db.Timestamptz(6)
  update_count             BigInt?
}

model country {
  id        Int     @id @default(autoincrement())
  code      String  @db.Char(2)
  name_caps String  @db.VarChar(80)
  name      String  @db.VarChar(80)
  iso3      String? @db.Char(3)
  numcode   Int?    @db.SmallInt
  phonecode Int
}

model inquiries {
  id             BigInt    @id @default(autoincrement())
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  name           String
  phone_number   String?
  company_name   String?
  inquiry_reason String?
  description    String
  tenant         String?
  email          String?
}

model navigation {
  id                    Int          @id @default(autoincrement())
  code                  String?      @unique(map: "uc_navigation_code") @db.VarChar
  parent_code           String?      @db.VarChar
  name                  String       @db.VarChar
  description           String?      @db.VarChar
  icon                  String?      @db.VarChar
  href                  String?      @db.VarChar
  iconforeground        String?
  iconbackground        String?
  click_event           String?
  tenant_code           String?
  is_active             Boolean?     @default(true)
  is_action_button      Boolean?     @default(false)
  nav_module_code       String?
  sort_order            Int?         @db.SmallInt
  is_footer_description Boolean?     @default(false)
  css_class             String?
  parent_navigation     navigation?  @relation("navigationTonavigation", fields: [parent_code], references: [code], map: "navigation_code_navigation_parent_code")
  navigation            navigation[] @relation("navigationTonavigation")

  @@unique([code, parent_code], map: "uc_navigation_code_parent_code")
}

model properties {
  code                  String    @default("") @db.VarChar
  name                  String    @db.VarChar
  parent_code           String?   @db.VarChar
  description           String?   @db.VarChar
  additional_attributes Json?
  tenant                String?   @db.VarChar
  update_count          BigInt?
  created_by            String?   @db.VarChar
  updated_by            String?   @db.VarChar
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)
  is_active             Boolean?  @default(true)
  is_archived           Boolean?  @default(false)
  id                    Int       @id @default(autoincrement())

  @@unique([code, parent_code], map: "uc__properties__code__parent_code")
}
