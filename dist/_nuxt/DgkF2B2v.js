import{m as E,ab as O,aE as $,aF as x,aG as n}from"./DQim9pRB.js";import{u as C}from"./xyCIIb-V.js";function A(o,r,u){const[e={},c]=typeof r=="string"?[{},r]:[r,u],t=E(()=>n(o)),a=e.key||O([c,typeof t.value=="string"?t.value:"",...L(e)]);if(!a||typeof a!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+a);if(!o)throw new Error("[nuxt] [useFetch] request is missing.");const i=a===c?"$f"+a:a;if(!e.baseURL&&typeof t.value=="string"&&t.value[0]==="/"&&t.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:m,lazy:y,default:d,transform:b,pick:g,watch:f,immediate:w,getCachedData:v,deep:_,dedupe:k,...D}=e,h=$({...x,...D,cache:typeof e.cache=="boolean"?void 0:e.cache}),F={server:m,lazy:y,default:d,transform:b,pick:g,immediate:w,getCachedData:v,deep:_,dedupe:k,watch:f===!1?[]:[h,t,...f||[]]};let s;return C(i,()=>{var l;(l=s==null?void 0:s.abort)==null||l.call(s),s=typeof AbortController<"u"?new AbortController:{};const p=n(e.timeout);return p&&setTimeout(()=>s.abort(),p),(e.$fetch||globalThis.$fetch)(t.value,{signal:s.signal,...h})},F)}function L(o){var u;const r=[((u=n(o.method))==null?void 0:u.toUpperCase())||"GET",n(o.baseURL)];for(const e of[o.params||o.query]){const c=n(e);if(!c)continue;const t={};for(const[a,i]of Object.entries(c))t[n(a)]=n(i);r.push(t)}return r}export{A as u};
